import type { Metadata } from "next";
import { Inter } from "next/font/google";
import { notFound } from 'next/navigation';
import { AppConfig } from "@/utils/AppConfig";
import { NextIntlClientProvider, useMessages } from 'next-intl';

import "@/styles/global.css";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "DEVS7UD.IO",
  description: "Generated by create next app",
  icons: [
    {
      rel: 'apple-touch-icon',
      url: '/apple-touch-icon.png',
    },
    {
      rel: 'icon',
      type: 'image/png',
      sizes: '32x32',
      url: '/favicon-32x32.png',
    },
    {
      rel: 'icon',
      type: 'image/png',
      sizes: '16x16',
      url: '/favicon-16x16.png',
    },
    {
      rel: 'icon',
      url: '/favicon.ico',
    },
  ],
};

type RootLayoutProps = Readonly<{
  children: React.ReactNode;
  params: { locale: string };
}>

export default function RootLayout({
  children,
  params,
}: RootLayoutProps) {
  // Validate that the incoming `locale` parameter is valid
  if (!AppConfig.locales.includes(params.locale)) notFound();

  // Using internationalization in Client Components
  const messages = useMessages();
  
  return (
    <html lang="en">
      <body className={inter.className}>
        <NextIntlClientProvider
          locale={params.locale}
          messages={messages}
        >{children}</NextIntlClientProvider></body>
    </html>
  );
}

// export const runtime = 'edge';
